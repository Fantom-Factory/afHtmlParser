Overview
********
A valiant effort to parse valid HTML5 documents into XML as defined by [W3C HTML Syntax]`https://www.w3.org/TR/html-markup/syntax.html`.

Html Parser currently recognises and supports:

Elements:
 - Normal elements: '<div></div>'
 - Void elements: '<br>'
 - Self closing elements: '<foreignElement />'
 - Raw text elements: '<script> ... </script>'
 - Escapable raw text elements: '<textarea> ... </textarea>'

Attributes:
 - Empty attributes: '<input disabled>'
 - Unquoted attributes: '<input type=submit>'
 - Single quoted attributes: <input type='submit'>
 - Double quoted attributes: '<input type="submit">'

Other:
 - XML declarations: '<?xml version="1.0" ?>'
 - DocTypes: '<!DOCTYPE html >'
 - Comments: '<!-- comment -->'
 - CData Sections: '<![CDATA[ cdata ]]>'
 - Numerical character references: '&#160;' and '&#xA0;'

> *Html Parser* because only *Chuck Norris* can parse HTML with regular expressions.



Quick Start
***********
pre>
syntax: fantom

class Example {
    Void main() {
        elem := HtmlParser().parseDoc("<input disabled value=wotever>")

        echo(elem.writeToStr)   // --> <input disabled='disabled' value='wotever'/>
    }
}
<pre



Usage [#usage]
**************
1 class - 1 method - 1 argument - 1 return value.

It's pretty self explanatory!

While Html Parser is more lenient than a validator it does *NOT* attempt to reconstruct documents from the tag soup of badly formatted HTML4 documents.

It's main purpose is to parse HTML5 documents created with [Slim]`pod:afSlim` into XML so they may be tested by [Bounce]`pod:afBounce` and [Sizzle]`pod:afSizzle`.

Html Parser uses [Pegger]`pod:afPegger` because [HTML can not be parsed with regular expressions]`http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454`.

